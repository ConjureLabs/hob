#!/usr/bin/env node
"use strict";

var _minimist = _interopRequireDefault(require("minimist"));

var _path = require("path");

var _projectDir = _interopRequireDefault(require("../lib/project-dir"));

var _startProcess = _interopRequireDefault(require("../lib/start-process"));

var _generateClientConfig = _interopRequireDefault(require("../lib/config/generate-client-config"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var argv = (0, _minimist.default)(process.argv.slice(2), {
  alias: {
    q: 'quick',
    h: 'help'
  },
  boolean: ['h', 'q', 'fresh-db']
});

if (argv.help) {
  console.log("\n    Description\n      Runs the development application\n    Usage\n      $ hob dev\n\n    Options\n      --quick, -q   Skip any transpile steps\n      --fresh-db    Resets the local database\n  ");
  process.exit(0);
}

function wrapup() {
  // kick off server (express)
  (0, _startProcess.default)({
    command: 'node',
    args: './server',
    cwd: _projectDir.default
  });
}

(function () {
  if (argv.quick) {
    if (argv['fresh-db']) {
      console.warn("Can't run 'hob dev' with both '--quick' and '--fresh-db");
      process.exit(1);
    }

    wrapup();
    return;
  } // 1. transpile styles


  (0, _startProcess.default)({
    args: ['../procs/stylus/prepare']
  }, function (code) {
    if (code !== 0) {
      process.exit();
    } // 2. generate client config file


    (0, _generateClientConfig.default)(); // 3.a. if --fresh-db set, then wipe db and re-init

    if (argv['fresh-db'] && process.env.NODE_ENV !== 'production') {
      (0, _startProcess.default)({
        command: 'psql',
        args: ['postgres', '--username=conjure_admin', '-w', "--file=\"init-".concat(NODE_ENV, ".sql")],
        cwd: (0, _path.resolve)(_projectDir.default, 'sql')
      }, function (code) {
        if (code !== 0) {
          process.exit();
        } // finally wrapup


        wrapup();
      });
      return;
    } // 3.b. else wrapup


    wrapup();
  });
})();